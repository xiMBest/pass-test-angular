{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PasswordStrengthService {\n  calculatePasswordStrength(password) {\n    const length = password.length;\n    if (length === 0) {\n      return 'gray';\n    } else if (length < 8) {\n      return 'red';\n    } else {\n      const hasLetters = /[a-zA-Z]/.test(password);\n      const hasDigits = /\\d/.test(password);\n      const hasSymbols = /[!@#$%^&*()_+[\\]{};':\"\\\\|,.<>/?]/.test(password);\n      if (hasLetters && hasDigits && hasSymbols) {\n        return 'green';\n      } else if (hasLetters && hasDigits) {\n        return 'yellow';\n      } else {\n        return 'red';\n      }\n    }\n  }\n}\nPasswordStrengthService.ɵfac = function PasswordStrengthService_Factory(t) {\n  return new (t || PasswordStrengthService)();\n};\nPasswordStrengthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PasswordStrengthService,\n  factory: PasswordStrengthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PasswordStrengthService","calculatePasswordStrength","password","length","hasLetters","test","hasDigits","hasSymbols","factory","ɵfac","providedIn"],"sources":["/home/ximbest/angular/pass-test-angular/src/app/password-service/password-strength.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordStrengthService {\n  calculatePasswordStrength(password: string): string {\n    const length = password.length;\n    if (length === 0) {\n      return 'gray';\n    } else if (length < 8) {\n      return 'red';\n    } else {\n      const hasLetters = /[a-zA-Z]/.test(password);\n      const hasDigits = /\\d/.test(password);\n      const hasSymbols = /[!@#$%^&*()_+[\\]{};':\"\\\\|,.<>/?]/.test(password);\n\n      if (hasLetters && hasDigits && hasSymbols) {\n        return 'green';\n      } else if (hasLetters && hasDigits) {\n        return 'yellow';\n      } else {\n        return 'red';\n      }\n    }\n  }\n}"],"mappings":";AAKA,OAAM,MAAOA,uBAAuB;EAClCC,yBAAyBA,CAACC,QAAgB;IACxC,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAM;IAC9B,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChB,OAAO,MAAM;KACd,MAAM,IAAIA,MAAM,GAAG,CAAC,EAAE;MACrB,OAAO,KAAK;KACb,MAAM;MACL,MAAMC,UAAU,GAAG,UAAU,CAACC,IAAI,CAACH,QAAQ,CAAC;MAC5C,MAAMI,SAAS,GAAG,IAAI,CAACD,IAAI,CAACH,QAAQ,CAAC;MACrC,MAAMK,UAAU,GAAG,kCAAkC,CAACF,IAAI,CAACH,QAAQ,CAAC;MAEpE,IAAIE,UAAU,IAAIE,SAAS,IAAIC,UAAU,EAAE;QACzC,OAAO,OAAO;OACf,MAAM,IAAIH,UAAU,IAAIE,SAAS,EAAE;QAClC,OAAO,QAAQ;OAChB,MAAM;QACL,OAAO,KAAK;;;EAGlB;;AApBWN,uBAAuB,C;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB,C;SAAvBA,uBAAuB;EAAAQ,OAAA,EAAvBR,uBAAuB,CAAAS,IAAA;EAAAC,UAAA,EAFtB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
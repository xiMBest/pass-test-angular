{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class PasswordInputComponent {\n  constructor() {\n    this.placeholder = 'Enter your password';\n    this.password = '';\n    this.onChange = () => {};\n    this.onTouched = () => {};\n  }\n  writeValue(value) {\n    this.password = value;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  onPasswordChange(event) {\n    const inputElement = event.target;\n    this.password = inputElement.value;\n    this.onChange(this.password);\n    this.onTouched();\n  }\n}\nPasswordInputComponent.ɵfac = function PasswordInputComponent_Factory(t) {\n  return new (t || PasswordInputComponent)();\n};\nPasswordInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordInputComponent,\n  selectors: [[\"app-password-input\"]],\n  inputs: {\n    placeholder: \"placeholder\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PasswordInputComponent),\n    multi: true\n  }])],\n  decls: 1,\n  vars: 1,\n  consts: [[\"type\", \"password\", 1, \"input-section\", 3, \"placeholder\", \"input\"]],\n  template: function PasswordInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"input\", function PasswordInputComponent_Template_input_input_0_listener($event) {\n        return ctx.onPasswordChange($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"placeholder\", ctx.placeholder);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n    display: block;\\n  }\\n  \\n  input[_ngcontent-%COMP%] {\\n    padding: 8px;\\n    font-size: 16px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    width: 100%;\\n    margin-bottom: 10px;\\n  }\\n  \\n  input[_ngcontent-%COMP%]:focus {\\n    outline: none;\\n    border-color: #007bff;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFzc3dvcmQtaW5wdXQvcGFzc3dvcmQtaW5wdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSxZQUFZO0lBQ1osZUFBZTtJQUNmLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsV0FBVztJQUNYLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixxQkFBcUI7RUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgXG4gIGlucHV0IHtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIH1cbiAgXG4gIGlucHV0OmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJvcmRlci1jb2xvcjogIzAwN2JmZjtcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["forwardRef","NG_VALUE_ACCESSOR","PasswordInputComponent","constructor","placeholder","password","onChange","onTouched","writeValue","value","registerOnChange","fn","registerOnTouched","onPasswordChange","event","inputElement","target","selectors","inputs","features","i0","ɵɵProvidersFeature","provide","useExisting","multi","decls","vars","consts","template","PasswordInputComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","PasswordInputComponent_Template_input_input_0_listener","$event","ɵɵelementEnd","ɵɵproperty"],"sources":["/home/ximbest/angular/pass-test-angular/src/app/password-input/password-input.component.ts","/home/ximbest/angular/pass-test-angular/src/app/password-input/password-input.component.html"],"sourcesContent":["import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-password-input',\n  templateUrl: './password-input.component.html',\n  styleUrls: ['./password-input.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PasswordInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class PasswordInputComponent implements ControlValueAccessor {\n  @Input() placeholder = 'Enter your password';\n  password: string = '';\n\n  private onChange: (value: any) => void = () => {};\n  private onTouched: () => void = () => {};\n\n  writeValue(value: any): void {\n    this.password = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onPasswordChange(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    this.password = inputElement.value;\n    this.onChange(this.password);\n    this.onTouched();\n  }\n}\n","<input class=\"input-section\" type=\"password\" [placeholder]=\"placeholder\" (input)=\"onPasswordChange($event)\">"],"mappings":"AAAA,SAAoBA,UAAU,QAAe,eAAe;AAC5D,SAA+BC,iBAAiB,QAAQ,gBAAgB;;AAcxE,OAAM,MAAOC,sBAAsB;EAZnCC,YAAA;IAaW,KAAAC,WAAW,GAAG,qBAAqB;IAC5C,KAAAC,QAAQ,GAAW,EAAE;IAEb,KAAAC,QAAQ,GAAyB,MAAK,CAAE,CAAC;IACzC,KAAAC,SAAS,GAAe,MAAK,CAAE,CAAC;;EAExCC,UAAUA,CAACC,KAAU;IACnB,IAAI,CAACJ,QAAQ,GAAGI,KAAK;EACvB;EAEAC,gBAAgBA,CAACC,EAAO;IACtB,IAAI,CAACL,QAAQ,GAAGK,EAAE;EACpB;EAEAC,iBAAiBA,CAACD,EAAO;IACvB,IAAI,CAACJ,SAAS,GAAGI,EAAE;EACrB;EAEAE,gBAAgBA,CAACC,KAAY;IAC3B,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAA0B;IACrD,IAAI,CAACX,QAAQ,GAAGU,YAAY,CAACN,KAAK;IAClC,IAAI,CAACH,QAAQ,CAAC,IAAI,CAACD,QAAQ,CAAC;IAC5B,IAAI,CAACE,SAAS,EAAE;EAClB;;AAxBWL,sBAAsB,C;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB,C;QAAtBA,sBAAsB;EAAAe,SAAA;EAAAC,MAAA;IAAAd,WAAA;EAAA;EAAAe,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CARtB,CACT;IACEC,OAAO,EAAErB,iBAAiB;IAC1BsB,WAAW,EAAEvB,UAAU,CAAC,MAAME,sBAAsB,CAAC;IACrDsB,KAAK,EAAE;GACR,CACF;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbHV,EAAA,CAAAY,cAAA,eAA4G;MAAnCZ,EAAA,CAAAa,UAAA,mBAAAC,uDAAAC,MAAA;QAAA,OAASJ,GAAA,CAAAlB,gBAAA,CAAAsB,MAAA,CAAwB;MAAA,EAAC;MAA3Gf,EAAA,CAAAgB,YAAA,EAA4G;;;MAA/DhB,EAAA,CAAAiB,UAAA,gBAAAN,GAAA,CAAA3B,WAAA,CAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}